{"version":3,"sources":["components/BookProduct/Booking.js","components/ReturnProduct/Return.js","components/TableView/TableView.js","components/DataTable/DataTable.js","components/Search/Search.js","View/Products.js","App.js","reportWebVitals.js","index.js"],"names":["BookProduct","props","useState","isOpenBookingValue","setIsOpenBookingvalue","isOpenBookingValueCompleted","setIsOpenBookingvalueCompleted","productBooking","setProductBooking","amountPreview","setamountPreview","fromDate","setFromdate","toDate","setToDate","bookModal","setBookModal","toggleModal","window","location","reload","toggleModalBookingValueComplted","toggleModalBookingValue","a","JSON","parse","localStorage","getItem","filter","item","name","code","date1","Date","date2","diffTime","Math","abs","dayDiff","ceil","alert","minimum_rent_period","price","className","Modal","show","onRequestClose","contentLabel","Header","style","fontSize","fontFamily","fontWeight","Body","color","InputGroup","align","value","onChange","e","target","required","disabled","map","val","text","product","products","mileage","needing_repair","Form","Control","type","min","toISOString","split","Footer","Button","onClick","width","height","marginBottom","backgroundColor","variant","marginTop","placeholder","border","background","fontsize","ReturnProduct","isOpenReturn","setIsOpenReturn","isOpenReturnValue","setIsOpenReturnvalue","setProduct","amount","setAmount","setRepair","setRentPeriod","returnModal","setReturnModal","toggleModalReturn","toggleModalReturnValue","useEffect","status","allProduct","TableView","marginRight","Table","responsive","tableHeader","header","index","searchKey","toLowerCase","includes","data","availability","durability","max_durability","DataTable","isOpen","setIsOpen","display","justifyContent","marginLeft","Search","serarchTerm","setSearchTerm","Text","id","xmlns","fill","class","viewBox","d","FormControl","Products","App","setItem","stringify","Data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23db118c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, Form, Button, InputGroup } from \"react-bootstrap\";\r\n\r\nexport default function BookProduct(props) {\r\n    const [isOpenBookingValue, setIsOpenBookingvalue] = useState(false);\r\n    const [isOpenBookingValueCompleted, setIsOpenBookingvalueCompleted] = useState(false);\r\n    const [productBooking, setProductBooking] = useState(\"\");\r\n    const [amountPreview, setamountPreview] = useState(\"\");\r\n    const [fromDate, setFromdate] = useState(\"\");\r\n    const [toDate, setToDate] = useState(\"\");\r\n    const [bookModal, setBookModal] = useState(true);\r\n\r\n\r\n\r\n    function toggleModal() {\r\n        setBookModal(false);\r\n        window.location.reload();\r\n    }\r\n\r\n    function toggleModalBookingValueComplted() {\r\n        setIsOpenBookingvalueCompleted(!isOpenBookingValueCompleted);\r\n        setIsOpenBookingvalueCompleted(!isOpenBookingValueCompleted);\r\n        setIsOpenBookingvalue(!isOpenBookingValue);\r\n    }\r\n    function toggleModalBookingValueCompltedFinal() {\r\n        setIsOpenBookingvalueCompleted(!isOpenBookingValueCompleted);\r\n        window.location.reload();\r\n    }\r\n\r\n    function toggleBookingValueCancel() {\r\n        setIsOpenBookingvalue(!isOpenBookingValue);\r\n    }\r\n    function toggleModalBookingValue() {\r\n        if (productBooking && fromDate && toDate) {\r\n            var a = JSON.parse(localStorage.getItem(\"data\")).filter(item => item.name + \"/\" + item.code === productBooking)\r\n            const date1 = new Date(toDate);\r\n            const date2 = new Date(fromDate);\r\n            const diffTime = Math.abs(date2 - date1);\r\n            const dayDiff = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n            if (fromDate > toDate) {\r\n                alert(\"To Date must be Greater than From Date!\")\r\n                setIsOpenBookingvalue(isOpenBookingValue);\r\n            }\r\n            else {\r\n                if (dayDiff >= a[0].minimum_rent_period)\r\n                    setIsOpenBookingvalue(!isOpenBookingValue);\r\n                else\r\n                    alert(\"You have to Rent this for minumum \" + a[0].minimum_rent_period + \" Days\");\r\n            }\r\n            setamountPreview(a[0].price * dayDiff);\r\n        }\r\n        else {\r\n            alert(\"Please Fill all the required Fields\");\r\n        }\r\n    }\r\n    return (\r\n\r\n        <div className=\"App\">\r\n\r\n            {/* Book Product Initialize */}\r\n            <Modal\r\n                show={bookModal ? true : false}\r\n                onRequestClose={toggleModal}\r\n                contentLabel=\"My dialog\"\r\n            >\r\n                <Modal.Header>\r\n                    <div><span style={{ fontSize: 20, fontFamily: \"Lucida Console\", fontWeight: 'bold' }} >BOOK A PRODUCT</span></div>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <div><span style={{ fontSize: 18, fontFamily: \"Lucida Console\" }} >SELECT PRODUCT</span><span style={{ color: 'red' }}>*</span></div>\r\n\r\n                    <InputGroup className=\"mb-3\">\r\n                        <select\r\n                            align=\"center\"\r\n                            className=\"form-control\"\r\n                            name=\"product\"\r\n                            value={productBooking}\r\n                            onChange={(e) => setProductBooking(e.target.value)}\r\n                            required={true}\r\n                        >\r\n                            <option value=\"\" disabled>-- Product --</option>\r\n\r\n                            {JSON.parse(localStorage.getItem(\"data\")).map((val) => (\r\n                                <option text={val.code}>\r\n                                    {val.name}/{val.code}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </InputGroup>\r\n                    <br />\r\n\r\n                    {/* Information Start */}\r\n                    {JSON.parse(localStorage.getItem(\"data\")).filter(product => product.name + \"/\" + product.code === productBooking).map(products => (\r\n                        <p style={{ fontSize: 22, fontFamily: \"Lucida Console\" }}>\r\n                            <p>Name:&nbsp;{products.name}</p>\r\n                            <p>Rental Period:&nbsp;{products.minimum_rent_period}</p>\r\n                            <p>Mileage:&nbsp;{products.mileage === null ? \"N/A\" : products.mileage}</p>\r\n                            <p>Repair Needed:&nbsp;{products.needing_repair === true ? \"Yes\" : \"No\"}</p>\r\n                        </p>\r\n                    ))}\r\n                    {/* Information End */}\r\n\r\n                    <span style={{ fontSize: 18, fontFamily: \"Lucida Console\" }} >FROM</span><span style={{ color: 'red' }}>*</span> &nbsp;\r\n                    <Form.Control type=\"date\" value={fromDate} min={new Date().toISOString().split(\"T\")[0]}\r\n\r\n                        onChange={(e) => {\r\n                            setFromdate(e.target.value);\r\n                        }} />\r\n                    <br />\r\n\r\n                    <span style={{ fontSize: 18, fontFamily: \"Lucida Console\" }} >TO</span><span style={{ color: 'red' }}>*</span>&nbsp;\r\n                    <Form.Control type=\"date\" value={toDate} onChange={(e) => {\r\n                        setToDate(e.target.value);\r\n                    }} />\r\n                </Modal.Body>\r\n                <br /><br />\r\n                <Modal.Footer>\r\n                    <Button onClick={toggleModalBookingValue} style={{ width: 108, fontSize: 18, fontFamily: \"Lucida Console\", height: 40, marginBottom: 10, backgroundColor: '#2621a0', color: 'white' }}>Yes</Button>\r\n                    &nbsp;\r\n                    <Button variant=\"danger\" onClick={toggleModal} style={{ width: 108, marginTop: -2, fontSize: 18, fontFamily: \"Lucida Console\", height: 40, color: 'white' }}>No</Button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Book Product Initialize */}\r\n\r\n\r\n            {/* Estimated Price After Booking Product */}\r\n            <Modal\r\n                show={isOpenBookingValue ? true : false}\r\n                onRequestClose={toggleModalBookingValue}\r\n                contentLabel=\"My dialog\"\r\n            >\r\n                <Modal.Header>\r\n                    <div><span style={{ fontSize: 20, fontFamily: \"Lucida Console\", fontWeight: 'bold' }} >BOOK A PRODUCT</span></div>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <span style={{ fontSize: 23, fontFamily: \"Lucida Console\" }}>Your Estimated Price</span>($)<input\r\n                        type=\"number\"\r\n                        placeholder=\"Enter Amount\"\r\n                        value={amountPreview}\r\n                        style={{ border: \"0\", fontSize: 22, fontFamily: \"Lucida Handwriting\", background: 'white', fontWeight: 'bold', marginBottom: 10 }}\r\n                        disabled\r\n\r\n                    />\r\n                    <br />\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <span style={{ fontsize: 22, fontFamily: \"Lucida Console\" }}>Do you want to procedure?</span> <br /><br />\r\n\r\n                    <Button onClick={toggleModalBookingValueComplted} style={{ width: 58, fontSize: 18, fontFamily: \"Lucida Console\", height: 37, marginBottom: 10, backgroundColor: '#2621a0', color: 'white' }}>Yes</Button>\r\n                    &nbsp;\r\n                    <Button variant=\"danger\" onClick={toggleBookingValueCancel} style={{ width: 58, marginTop: -2, fontSize: 18, fontFamily: \"Lucida Console\", height: 37, color: 'white' }}>No</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Estimated Price After Booking Product */}\r\n\r\n            {/* Booking Product Confirmation */}\r\n            <Modal\r\n                show={isOpenBookingValueCompleted ? true : false}\r\n                onRequestClose={toggleModalBookingValueComplted}\r\n                contentLabel=\"My dialog\"\r\n            >\r\n                <Modal.Header>\r\n                    <span style={{ fontFamily: \"Lucida Handwriting\", fontSize: 22 }}>CONGRATULATIONS!</span><br /><br />\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <span style={{ fontsize: 22, fontFamily: \"Lucida Console\" }}>YOU HAVE BOOKED THIS PRODUCT!</span> <br />\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button onClick={toggleModalBookingValueCompltedFinal} style={{ fontSize: 18, fontFamily: \"Lucida Console\", width: 150, height: 40, background: '#2621a0', color: 'white' }}>Done</Button><br />\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Booking Product Confirmation */}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, InputGroup } from \"react-bootstrap\";\r\n\r\nexport default function ReturnProduct(props) {\r\n    const [isOpenReturn, setIsOpenReturn] = useState(false);\r\n    const [isOpenReturnValue, setIsOpenReturnvalue] = useState(false);\r\n    const [product, setProduct] = useState(\"\");\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [amountPreview, setamountPreview] = useState(\"\");\r\n    const [repair, setRepair] = useState(\"\");\r\n    const [rentPeriod, setRentPeriod] = useState(\"\");\r\n    const [returnModal, setReturnModal] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setReturnModal(props.status);\r\n    }, []);\r\n\r\n    function toggleModalReturn() {\r\n        setIsOpenReturn(!isOpenReturn);\r\n        setReturnModal(!returnModal);\r\n        window.location.reload();\r\n    }\r\n\r\n    function toggleModalReturnValueFinal() {\r\n        setIsOpenReturnvalue(!isOpenReturnValue);\r\n        setIsOpenReturn(!isOpenReturn);\r\n        window.location.reload();\r\n    }\r\n    function toggleModalReturnValue() {\r\n        if (product && amount) {\r\n            setIsOpenReturnvalue(!isOpenReturnValue);\r\n            var a = JSON.parse(localStorage.getItem(\"data\")).filter(item => item.name + \"/\" + item.code === product)\r\n            setamountPreview(a[0].price * amount);\r\n            setRepair(a[0].needing_repair === \"false\" ? \"No\" : \"Yes\");\r\n            setRentPeriod(a[0].minimum_rent_period);\r\n        }\r\n        else {\r\n            alert(\"Please Fill all the required Fields\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            {/* Return Product Initialize */}\r\n            <Modal\r\n                show={returnModal !== false ? true : false}\r\n                onRequestClose={toggleModalReturn}\r\n                contentLabel=\"My dialog\"\r\n            >\r\n                <Modal.Header>\r\n                    <div><span style={{ fontSize: 20, fontFamily: \"Lucida Console\", fontWeight: 'bold' }} >RETURN PRODUCT</span></div>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <div><span style={{ fontSize: 19, fontFamily: \"Lucida Console\" }} >SELECT PRODUCT</span><span style={{ color: 'red' }}>*</span></div>\r\n\r\n                    <InputGroup className=\"mb-3\">\r\n                        <select\r\n                            className=\"form-control\"\r\n                            name=\"product\"\r\n                            value={product}\r\n                            onChange={(e) => setProduct(e.target.value)}\r\n                            required\r\n                        >\r\n                            <option value=\"\" disabled>-- Product --</option>\r\n\r\n                            {JSON.parse(localStorage.getItem(\"data\")).map((val) => (\r\n                                <option text={val.code}>\r\n                                    {val.name}/{val.code}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </InputGroup>\r\n                    <br />\r\n\r\n                    {/* Information Start */}\r\n                    {JSON.parse(localStorage.getItem(\"data\")).filter(allProduct => allProduct.name + \"/\" + allProduct.code === product).map(products => (\r\n                        <p style={{ fontSize: 22, fontFamily: \"Lucida Console\" }}>\r\n                            <p>Name:&nbsp;{products.name}</p>\r\n                            <p>Rental Period:&nbsp;{products.minimum_rent_period}</p>\r\n                            <p>Mileage:&nbsp;{products.mileage === null ? \"N/A\" : products.mileage}</p>\r\n                            <p>Repair Needed:&nbsp;{products.needing_repair === true ? \"Yes\" : \"No\"}</p>\r\n                        </p>\r\n                    ))}\r\n                    {/* Information End */}\r\n\r\n                    <div><span style={{ fontSize: 19, fontFamily: \"Lucida Console\" }} >USED MILEAGE</span><span style={{ color: 'red' }}>*</span></div>\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Enter Mileage\"\r\n                        value={amount}\r\n                        min=\"0\"\r\n                        style={{ width: '100%' }}\r\n                        className=\"form-control\"\r\n                        onChange={(e) => {\r\n                            setAmount(e.target.value);\r\n                        }}\r\n                    />\r\n                    <br />\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button onClick={toggleModalReturnValue} style={{ width: 58, fontSize: 18, fontFamily: \"Lucida Console\", height: 40, marginBottom: 10, backgroundColor: '#2621a0', color: 'white' }}>Yes</Button>\r\n                    &nbsp;\r\n                    <Button variant=\"danger\" onClick={toggleModalReturn} style={{ width: 58, marginTop: -2, fontSize: 18, fontFamily: \"Lucida Console\", height: 40, color: 'white' }}>No</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Return Product Initialize */}\r\n\r\n            {/* Return Product Confirmation */}\r\n            <Modal\r\n                show={isOpenReturnValue ? true : false}\r\n                onRequestClose={toggleModalReturnValue}\r\n                contentLabel=\"My dialog\"\r\n            >\r\n\r\n                <Modal.Header>\r\n                    <span style={{ fontFamily: \"Lucida Handwriting\", fontSize: 22 }}> RETURN A PRODUCT!</span> <br /> <br />\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <span style={{ fontsize: 22, fontFamily: \"Lucida Console\" }}>YOU ARE GOING TO RETUEN PRODUCT...</span> <br /><br />\r\n                    <span style={{ fontSize: 20, fontFamily: \"Lucida Console\" }}>Your Total Price is</span>($)\r\n                    <input\r\n                        value={amountPreview}\r\n                        style={{ border: \"0\", fontSize: 22, fontFamily: \"Lucida Handwriting\", background: 'white', fontWeight: 'bold', marginBottom: 10 }}\r\n                        disabled\r\n                    /><br />\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <span style={{ fontsize: 22, fontFamily: \"Lucida Console\" }}>DO you want to procedure?</span> <br /><br />\r\n                    <Button onClick={toggleModalReturnValueFinal} style={{ fontSize: 18, fontFamily: \"Lucida Console\", width: 120, height: 41, background: '#2621a0', color: 'white' }}>Confirm</Button><br />\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Return Product Confirmation */}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport \"../style.css\"\r\nimport { Table } from \"react-bootstrap\";\r\n\r\n\r\nexport default function TableView(props) {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"\">\r\n                <div style={{ marginRight: 20, border: '1px solid white', marginBottom: 10 }} className=\"TableDesign\">\r\n\r\n                    <Table responsive=\"sm\" responsive=\"md\" responsive=\"xs\" responsive=\"lg\" responsive=\"xl\" striped hover>\r\n                        <thead className=\"\" style={{ backgroundColor: '#2621a0' }}>\r\n                            <tr>\r\n                                {props.tableHeader.map((header, index) => (\r\n                                    <th style={{ fontsize: 21, color: \"white\", fontFamily: \"Lucida Console\" }}>{header}</th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {JSON.parse(localStorage.getItem(\"data\")).filter((val) => {\r\n                                if (props.searchKey === \"\") {\r\n                                    return val;\r\n                                }\r\n                                else if (val.name.toLowerCase().includes(props.searchKey.toLowerCase())) {\r\n                                    return val;\r\n                                }\r\n                            }).map((data, index) => (\r\n                                <tr key={data.code}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{data.name}</td>\r\n                                    <td>{data.type}</td>\r\n                                    <td>{data.availability === true ? \"Yes\" : \"No\"}</td>\r\n                                    <td>{data.needing_repair === true ? \"Yes\" : \"No\"}</td>\r\n                                    <td>{data.durability}</td>\r\n                                    <td>{data.max_durability}</td>\r\n                                    <td>{data.mileage === \"\" || data.mileage === null ? \"N/A\" : data.mileage}</td>\r\n                                    <td>{data.price}</td>\r\n                                    <td>{data.minimum_rent_period}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Table } from \"react-bootstrap\";\r\nimport BookProduct from '../BookProduct/Booking'\r\nimport ReturnProduct from '../ReturnProduct/Return'\r\nimport TableView from '../TableView/TableView'\r\nimport \"../style.css\"\r\n\r\nexport default function DataTable(props) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isOpenReturn, setIsOpenReturn] = useState(false);\r\n    const [tableHeader, setTableHeader] = useState([\"\", \"Name\", \"Type\", \"Availability\", \"Repair Needed\", \"Durability\", \"Maximum Durability\", \"Mileage\", \"Price\", \"Minimum Rent Period\"\r\n    ])\r\n\r\n    function toggleModal() {\r\n        setIsOpen(true);\r\n    }\r\n    function toggleModalReturn() {\r\n        setIsOpenReturn(true);\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"\">\r\n                <TableView\r\n                    searchKey={props.searchKey}\r\n                    tableHeader={tableHeader}\r\n                />\r\n            </div>\r\n            <div className=\"mb-5\" style={{ marginRight: 21, display: 'flex', justifyContent: 'flex-end' }}>\r\n                <Button onClick={toggleModal} style={{ width: 85 }} >Book</Button>\r\n                <Button onClick={toggleModalReturn} style={{ marginLeft: 5, width: 85 }} variant=\"danger\">Return</Button>\r\n            </div>\r\n            <div>\r\n                {isOpen ? <BookProduct status={isOpen} /> : \"\"}\r\n                {isOpenReturn ? <ReturnProduct status={isOpenReturn} /> : \"\"}\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\nimport \"../style.css\"\r\nimport DataTable from '../../components/DataTable/DataTable'\r\n\r\n\r\nexport default function Search() {\r\n    const [serarchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    return (\r\n        <div className=\"Search\">\r\n            <div className=\"center\">\r\n                <div className=\"float-right mt-4\" style={{ marginRight: 20 }}>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Text id=\"basic-addon1\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\r\n                        </svg>\r\n                        </InputGroup.Text>\r\n                        <FormControl\r\n                            placeholder=\"Name or Type\"\r\n                            aria-label=\"Search\"\r\n                            style={{ height: 40 }}\r\n                            aria-describedby=\"basic-addon1\"\r\n                            onChange={(e) => {\r\n                                setSearchTerm(e.target.value);\r\n                            }}\r\n                        />\r\n                    </InputGroup>\r\n                </div>\r\n                <div>\r\n                    <DataTable\r\n                        searchKey={serarchTerm}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n","import Search from '../components/Search/Search'\r\n\r\nfunction Products() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Search />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Products;\r\n","import './App.css';\r\nimport Product from './View/Products'\r\nimport Data from '../src/data/data.json'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {localStorage.setItem('data', JSON.stringify(Data))}\r\n      <Product />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}