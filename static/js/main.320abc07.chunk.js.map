{"version":3,"sources":["components/Products.js","App.js","reportWebVitals.js","index.js"],"names":["App","useState","serarchTerm","setSearchTerm","isOpen","setIsOpen","isOpenReturn","setIsOpenReturn","isOpenReturnValue","setIsOpenReturnvalue","isOpenBookingValue","setIsOpenBookingvalue","isOpenBookingValueCompleted","setIsOpenBookingvalueCompleted","product","setProduct","productBooking","setProductBooking","amount","setAmount","amountPreview","setamountPreview","repair","setRepair","rentPeriod","setRentPeriod","fromDate","setFromdate","toDate","setToDate","day","setDay","toggleModal","toggleModalReturn","toggleModalBookingValueComplted","toggleModalReturnValue","a","data","filter","item","name","code","price","needing_repair","minimum_rent_period","alert","toggleModalBookingValue","currentDate","Date","console","log","date1","date2","diffTime","Math","abs","dayDiff","ceil","useEffect","setTimeout","bind","className","style","marginRight","InputGroup","Text","id","xmlns","width","height","fill","class","viewBox","d","FormControl","placeholder","onChange","e","target","value","border","Table","responsive","backgroundColor","fontsize","color","fontFamily","val","toLowerCase","includes","type","map","m","index","availability","durability","max_durability","mileage","display","justifyContent","Button","onClick","marginLeft","variant","Modal","show","onRequestClose","contentLabel","Header","fontSize","fontWeight","Body","align","required","disabled","text","products","Form","Control","min","toISOString","split","Footer","marginBottom","marginTop","background","allProduct","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.320abc07.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport data from '../data.json';\r\nimport { Modal, Form, Button, Table, InputGroup, FormControl  } from \"react-bootstrap\";\r\nimport \"./style.css\"\r\n\r\nimport {\r\n    MDBNavbar,\r\n    MDBNavbarNav,\r\n    MDBNavbarItem,\r\n    MDBNavbarLink,\r\n    MDBNavbarToggler,\r\n    MDBIcon\r\n} from 'mdb-react-ui-kit';\r\nimport { MDBContainer, } from \"mdbreact\";\r\n\r\nexport default function App() {\r\n    const [serarchTerm, setSearchTerm] = useState(\"\");\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isOpenReturn, setIsOpenReturn] = useState(false);\r\n    const [isOpenReturnValue, setIsOpenReturnvalue] = useState(false);\r\n    const [isOpenBookingValue, setIsOpenBookingvalue] = useState(false);\r\n    const [isOpenBookingValueCompleted, setIsOpenBookingvalueCompleted] = useState(false);\r\n    const [product, setProduct] = useState(\"\");\r\n    const [productBooking, setProductBooking] = useState(\"\");\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [amountPreview, setamountPreview] = useState(\"\");\r\n    const [repair, setRepair] = useState(\"\");\r\n    const [rentPeriod, setRentPeriod] = useState(\"\");\r\n    const [fromDate, setFromdate] = useState(\"\");\r\n    const [toDate, setToDate] = useState(\"\");\r\n\r\n    const [day, setDay] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (day == \"\") {\r\n            setDay(1);\r\n        }\r\n        setTimeout(function () {\r\n            var a = day + 1;\r\n            setDay(a);\r\n        }.bind(this), 1000);\r\n\r\n    }, [])\r\n\r\n    function toggleModal() {\r\n        setIsOpen(!isOpen);\r\n    }\r\n    function toggleModalReturn() {\r\n        setIsOpenReturn(!isOpenReturn);\r\n    }\r\n    function toggleModalBookingValueComplted() {\r\n        setIsOpenBookingvalueCompleted(!isOpenBookingValueCompleted);\r\n        setIsOpenBookingvalueCompleted(!isOpenBookingValueCompleted);\r\n        setIsOpenBookingvalue(!isOpenBookingValue);\r\n        setIsOpen(!isOpen);\r\n    }\r\n    function toggleModalBookingValueCompltedFinal() {\r\n        setIsOpenBookingvalueCompleted(!isOpenBookingValueCompleted);\r\n\r\n    }\r\n    function toggleModalReturnValueFinal() {\r\n        setIsOpenReturnvalue(!isOpenReturnValue);\r\n        setIsOpenReturn(!isOpenReturn);\r\n    }\r\n    function toggleModalReturnValue() {\r\n        if (product && amount) {\r\n            setIsOpenReturnvalue(!isOpenReturnValue);\r\n            var a = data.filter(item => item.name + \"/\" + item.code === product)\r\n            setamountPreview(a[0].price * amount);\r\n            setRepair(a[0].needing_repair === \"false\" ? \"No\" : \"Yes\");\r\n            setRentPeriod(a[0].minimum_rent_period);\r\n        }\r\n        else {\r\n            alert(\"Please Fill all the required Fields\");\r\n        }\r\n    }\r\n    function toggleBookingValueCancel() {\r\n        setIsOpenBookingvalue(!isOpenBookingValue);\r\n    }\r\n    function toggleModalBookingValue() {\r\n        if (productBooking && fromDate && toDate) {\r\n            var currentDate = new Date();\r\n            console.log(currentDate);\r\n            var startingDate = new Date(fromDate);\r\n            var a = data.filter(item => item.name + \"/\" + item.code === productBooking)\r\n            const date1 = new Date(toDate);\r\n            const date2 = new Date(fromDate);\r\n            const diffTime = Math.abs(date2 - date1);\r\n            const dayDiff = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n            if (fromDate > toDate) {\r\n                alert(\"To Date must be Greater than From Date!\")\r\n                setIsOpenBookingvalue(isOpenBookingValue);\r\n            }\r\n            else {\r\n                if (dayDiff >= a[0].minimum_rent_period)\r\n                    setIsOpenBookingvalue(!isOpenBookingValue);\r\n                else\r\n                    alert(\"You have to Rent this for minumum \" + a[0].minimum_rent_period + \" Days\");\r\n            }\r\n            setamountPreview(a[0].price * dayDiff);\r\n        }\r\n        else {\r\n            alert(\"Please Fill all the required Fields\");\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"App\">{console.log(day)}\r\n            <div className=\"center\">\r\n                {/* <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search...\"\r\n                    className=\"form-Control search\"\r\n                    style={{ marginTop: 0, fontSize: 19.5, height: 44, marginBottom: 10, width: \"30.6%\", display: 'block' }}\r\n                    onChange={(e) => {\r\n                        setSearchTerm(e.target.value);\r\n                    }}\r\n                /> */}\r\n\r\n\r\n            <div className=\"float-right mt-4\" style={{marginRight:20}}>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text id=\"basic-addon1\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\r\n               </svg>\r\n              </InputGroup.Text>\r\n                    <FormControl\r\n                     placeholder=\"Name or Type\"\r\n                     aria-label=\"Search\"\r\n                     style={{height:50}}\r\n                     aria-describedby=\"basic-addon1\"\r\n                     onChange={(e) => {\r\n                        setSearchTerm(e.target.value);\r\n                    }}\r\n                   />\r\n            </InputGroup>\r\n            </div>\r\n\r\n                {/* <div className=\"columnGrid\">\r\n                    <div>\r\n                        <Button onClick={toggleModal} style={{ fontsize: 21, color: \"white\", fontFamily: \"Lucida Console\", marginTop: 0, marginBottom: 10, width: \"100%\", display: 'block' }}>\r\n                            Book\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Button variant=\"danger\" onClick={toggleModalReturn} style={{ fontsize: 21, color: \"white\", fontFamily: \"Lucida Console\", marginTop: 0, marginLeft: 10, marginBottom: 10, width: \"100%\", display: 'block' }}>\r\n                            Return\r\n                        </Button>\r\n                    </div>\r\n                </div> */}\r\n                <div style={{marginRight:20, border: '1px solid white'}} className=\"TableDesign\">\r\n                <Table responsive=\"sm\" responsive=\"md\" responsive=\"xs\" responsive=\"lg\" responsive=\"xl\" striped hover>\r\n                    <thead className=\"\" style={{ backgroundColor: '#2621a0' }}>\r\n                        <tr>\r\n                            <th style={{ fontsize: 21, color: \"white\", fontFamily: \"Lucida Console\" }}></th>\r\n                            <th style={{ fontsize: 21, color: \"white\", fontFamily: \"Lucida Console\" }}>Name</th>\r\n                            <th style={{ fontsize: 21, color: \"white\", fontFamily: \"Lucida Console\" }}>Type </th>\r\n                            <th style={{ fontsize: 21, color: \"white\", fontFamily: \"Lucida Console\" }}>Availability</th>\r\n                            <th style={{ fontsize: 21, color: \"white\", fontFamily: \"Lucida Console\" }}>Repair Needed</th>\r\n                            <th style={{ fontsize: 21, color: \"white\", fontFamily: \"Lucida Console\" }}>Durability</th>\r\n                            <th style={{ fontsize: 21, color: \"white\", fontFamily: \"Lucida Console\" }}>Maximum Durability</th>\r\n                            <th style={{ fontsize: 21, color: \"white\", fontFamily: \"Lucida Console\" }}>Mileage</th>\r\n                            <th style={{ fontsize: 21, color: \"white\", fontFamily: \"Lucida Console\" }}>Price</th>\r\n                            <th style={{ fontsize: 21, color: \"white\", fontFamily: \"Lucida Console\" }}>Minimum Rent Period</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data.filter((val) => {\r\n                            if (serarchTerm == \"\") {\r\n                                return val;\r\n                            }\r\n                            else if (\r\n                                val.name.toLowerCase().includes(serarchTerm.toLowerCase()) ||\r\n                                val.type.toLowerCase().includes(serarchTerm.toLowerCase())\r\n\r\n                            ) {\r\n                                return val;\r\n                            }\r\n                        }).map((m,index) => (\r\n                            <tr key={m.code}>\r\n                                <td>{index+1}</td>\r\n                                <td>{m.name}</td>\r\n                                <td>{m.type}</td>\r\n                                <td>{m.availability === true ? \"Yes\" : \"No\"}</td>\r\n                                <td>{m.needing_repair === true ? \"Yes\" : \"No\"}</td>\r\n                                <td>{m.durability}</td>\r\n                                <td>{m.max_durability}</td>\r\n                                <td>{m.mileage === \"\" || m.mileage === null ? \"N/A\" : m.mileage }</td>\r\n                                <td>{m.price}</td>\r\n                                <td>{m.minimum_rent_period}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                </div>\r\n            </div>\r\n        <div className=\"mb-5\" style={{ marginRight:31, display: 'flex', justifyContent: 'flex-end' }}>\r\n          <Button onClick={toggleModal} style={{width:85}} >Book</Button>\r\n          <Button onClick={toggleModalReturn} style={{marginLeft:5, width:85}}   variant=\"danger\">Return</Button>\r\n         </div>\r\n            {/* <Button variant=\"info\">Info</Button>{' '} */}\r\n\r\n            {/* Start of Booking Product Process */}\r\n            {/* Book Product Initialize */}\r\n            <Modal\r\n                show={isOpen ? true : false}\r\n                onRequestClose={toggleModal}\r\n                contentLabel=\"My dialog\"\r\n            >\r\n                <Modal.Header>\r\n                    <div><span style={{ fontSize: 20, fontFamily: \"Lucida Console\", fontWeight: 'bold' }} >BOOK A PRODUCT</span></div>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <div><span style={{ fontSize: 18, fontFamily: \"Lucida Console\" }} >SELECT PRODUCT</span><span style={{ color: 'red' }}>*</span></div>\r\n                    {/* <select\r\n                        align=\"center\"\r\n                        className=\"form-control\"\r\n                        name=\"product\"\r\n                        value={productBooking}\r\n                        onChange={(e) => setProductBooking(e.target.value)}\r\n                        required={true}\r\n                        style={{ width: '100%' }}\r\n                    >\r\n                        <option value=\"\" disabled>-- Product --</option>\r\n\r\n                        {data.map((val) => (\r\n                            <option text={val.code}>\r\n                                {val.name}/{val.code}\r\n                            </option>\r\n                        ))}\r\n                    </select> */}\r\n\r\n                <InputGroup className=\"mb-3\">\r\n                <select\r\n                        align=\"center\"\r\n                        className=\"form-control\"\r\n                        name=\"product\"\r\n                        value={productBooking}\r\n                        onChange={(e) => setProductBooking(e.target.value)}\r\n                        required={true}\r\n                        // style={{ width: '100%' }}\r\n                    >\r\n                        <option value=\"\" disabled>-- Product --</option>\r\n\r\n                        {data.map((val) => (\r\n                            <option text={val.code}>\r\n                                {val.name}/{val.code}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                <InputGroup.Text id=\"basic-addon1\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-caret-down\" viewBox=\"0 0 16 16\">\r\n                  <path d=\"M3.204 5h9.592L8 10.481 3.204 5zm-.753.659 4.796 5.48a1 1 0 0 0 1.506 0l4.796-5.48c.566-.647.106-1.659-.753-1.659H3.204a1 1 0 0 0-.753 1.659z\"/>\r\n                </svg>\r\n              </InputGroup.Text>\r\n              </InputGroup>\r\n                    <br />\r\n\r\n                    {/* Information Start */}\r\n                    {data.filter(product => product.name + \"/\" + product.code === productBooking).map(products => (\r\n                        <p style={{ fontSize: 22, fontFamily: \"Lucida Console\" }}>\r\n                            <p>Name:&nbsp;{products.name}</p>\r\n                            <p>Rental Period:&nbsp;{products.minimum_rent_period}</p>{console.log(products.mileage)}\r\n                            <p>Mileage:&nbsp;{products.mileage === null ? \"N/A\" : products.mileage}</p>\r\n                            <p>Repair Needed:&nbsp;{products.needing_repair === true ? \"Yes\" : \"No\"}</p>\r\n                        </p>\r\n                    ))}\r\n                    {/* Information End */}\r\n\r\n                    <span style={{ fontSize: 18, fontFamily: \"Lucida Console\" }} >FROM</span><span style={{ color: 'red' }}>*</span> &nbsp;\r\n                    <Form.Control type=\"date\" value={fromDate} min={new Date().toISOString().split(\"T\")[0]}\r\n\r\n                        onChange={(e) => {\r\n                            setFromdate(e.target.value);\r\n                        }} />\r\n                    <br />\r\n\r\n                    <span style={{ fontSize: 18, fontFamily: \"Lucida Console\" }} >TO</span><span style={{ color: 'red' }}>*</span>&nbsp;\r\n                    <Form.Control type=\"date\" value={toDate} onChange={(e) => {\r\n                        setToDate(e.target.value);\r\n                    }} />\r\n                </Modal.Body>\r\n                <br /><br />\r\n                <Modal.Footer>\r\n                    <Button onClick={toggleModalBookingValue} style={{ width: 108, fontSize: 18, fontFamily: \"Lucida Console\", height: 40, marginBottom: 10, backgroundColor: '#2621a0', color: 'white' }}>Yes</Button>\r\n                    &nbsp;\r\n                    <Button variant=\"danger\" onClick={toggleModal} style={{ width: 108, marginTop: -2, fontSize: 18, fontFamily: \"Lucida Console\", height: 40, color: 'white' }}>No</Button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Book Product Initialize */}\r\n\r\n            {/* Estimated Price After Booking Product */}\r\n            <Modal\r\n                show={isOpenBookingValue ? true : false}\r\n                onRequestClose={toggleModalBookingValue}\r\n                contentLabel=\"My dialog\"\r\n            >\r\n                <Modal.Header>\r\n                    <div><span style={{ fontSize: 20, fontFamily: \"Lucida Console\", fontWeight: 'bold' }} >BOOK A PRODUCT</span></div>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <span style={{ fontSize: 23, fontFamily: \"Lucida Console\" }}>Your Estimated Price</span>($)<input\r\n                        type=\"number\"\r\n                        placeholder=\"Enter Amount\"\r\n                        value={amountPreview}\r\n                        style={{ border: \"0\", fontSize: 22, fontFamily: \"Lucida Handwriting\", background: 'white', fontWeight: 'bold', marginBottom: 10 }}\r\n                        disabled\r\n\r\n                    />\r\n                    <br />\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <span style={{ fontsize: 22, fontFamily: \"Lucida Console\" }}>Do you want to procedure?</span> <br /><br />\r\n\r\n                    <Button onClick={toggleModalBookingValueComplted} style={{ width: 58, fontSize: 18, fontFamily: \"Lucida Console\", height: 37, marginBottom: 10, backgroundColor: '#2621a0',  color: 'white' }}>Yes</Button>\r\n                    &nbsp;\r\n                    <Button variant=\"danger\" onClick={toggleBookingValueCancel} style={{ width: 58, marginTop: -2, fontSize: 18, fontFamily: \"Lucida Console\", height: 37, color: 'white' }}>No</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Estimated Price After Booking Product */}\r\n\r\n            {/* Booking Product Confirmation */}\r\n            <Modal\r\n                show={isOpenBookingValueCompleted ? true : false}\r\n                onRequestClose={toggleModalBookingValueComplted}\r\n                contentLabel=\"My dialog\"\r\n            >\r\n                <Modal.Header>\r\n                    <span style={{ fontFamily: \"Lucida Handwriting\", fontSize: 22 }}>CONGRATULATIONS!</span><br /><br />\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <span style={{ fontsize: 22, fontFamily: \"Lucida Console\" }}>YOU HAVE BOOKED THIS PRODUCT!</span> <br />\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button onClick={toggleModalBookingValueCompltedFinal} style={{ fontSize: 18, fontFamily: \"Lucida Console\", width: 150, height: 40, background: '#2621a0', color: 'white' }}>Main Menu</Button><br />\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Booking Product Confirmation */}\r\n            {/* End of Booking Product Process */}\r\n\r\n            {/* Start of Returing Product Process */}\r\n            {/* Return Product Initialize */}\r\n            <Modal\r\n                show={isOpenReturn ? true : false}\r\n                onRequestClose={toggleModalReturn}\r\n                contentLabel=\"My dialog\"\r\n            >\r\n                <Modal.Header>\r\n                    <div><span style={{ fontSize: 20, fontFamily: \"Lucida Console\", fontWeight: 'bold' }} >RETURN PRODUCT</span></div>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <div><span style={{ fontSize: 19, fontFamily: \"Lucida Console\" }} >SELECT PRODUCT</span><span style={{ color: 'red' }}>*</span></div>\r\n\r\n                    <InputGroup className=\"mb-3\">\r\n                  <select\r\n                        className=\"form-control\"\r\n                        name=\"product\"\r\n                        value={product}\r\n                        onChange={(e) => setProduct(e.target.value)}\r\n                        // style={{ width: '100%' }}\r\n                        required\r\n                    >\r\n                        <option value=\"\" disabled>-- Product --</option>\r\n\r\n                        {data.map((val) => (\r\n                            <option text={val.code}>\r\n                                {val.name}/{val.code}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                <InputGroup.Text id=\"basic-addon1\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-caret-down\" viewBox=\"0 0 16 16\">\r\n                  <path d=\"M3.204 5h9.592L8 10.481 3.204 5zm-.753.659 4.796 5.48a1 1 0 0 0 1.506 0l4.796-5.48c.566-.647.106-1.659-.753-1.659H3.204a1 1 0 0 0-.753 1.659z\"/>\r\n                </svg>\r\n              </InputGroup.Text>\r\n              </InputGroup>\r\n                    <br />\r\n\r\n                    {/* Information Start */}\r\n                    {data.filter(allProduct => allProduct.name + \"/\" + allProduct.code === product).map(products => (\r\n                        <p style={{ fontSize: 22, fontFamily: \"Lucida Console\" }}>\r\n                            <p>Name:&nbsp;{products.name}</p>\r\n                            <p>Rental Period:&nbsp;{products.minimum_rent_period}</p>\r\n                            <p>Mileage:&nbsp;{products.mileage === null ? \"N/A\" : products.mileage}</p>\r\n                            <p>Repair Needed:&nbsp;{products.needing_repair === true ? \"Yes\" : \"No\"}</p>\r\n                        </p>\r\n                    ))}\r\n                    {/* Information End */}\r\n\r\n                    <div><span style={{ fontSize: 19, fontFamily: \"Lucida Console\" }} >USED MILEAGE</span><span style={{ color: 'red' }}>*</span></div>\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Enter Mileage\"\r\n                        value={amount}\r\n                        min=\"0\"\r\n                        style={{ width: '100%' }}\r\n                        className=\"form-control\"\r\n                        onChange={(e) => {\r\n                            setAmount(e.target.value);\r\n                        }}\r\n                    />\r\n                    <br />\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button onClick={toggleModalReturnValue} style={{ width: 58, fontSize: 18, fontFamily: \"Lucida Console\", height: 40, marginBottom: 10, backgroundColor: '#2621a0', color: 'white' }}>Yes</Button>\r\n                    &nbsp;\r\n                    <Button variant=\"danger\" onClick={toggleModalReturn} style={{ width: 58, marginTop: -2, fontSize: 18, fontFamily: \"Lucida Console\", height: 40, color: 'white' }}>No</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Return Product Initialize */}\r\n\r\n            {/* Return Product Confirmation */}\r\n            <Modal\r\n                show={isOpenReturnValue ? true : false}\r\n                onRequestClose={toggleModalReturnValue}\r\n                contentLabel=\"My dialog\"\r\n            >\r\n\r\n                <Modal.Header>\r\n                    <span style={{ fontFamily: \"Lucida Handwriting\", fontSize: 22 }}> RETURN A PRODUCT!</span> <br /> <br />\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <span style={{ fontsize: 22, fontFamily: \"Lucida Console\" }}>YOU ARE GOING TO RETUEN PRODUCT...</span> <br /><br />\r\n                    <span style={{ fontSize: 20, fontFamily: \"Lucida Console\" }}>Your Total Price is</span>($)\r\n                    <input\r\n                        value={amountPreview}\r\n                        style={{ border: \"0\", fontSize: 22, fontFamily: \"Lucida Handwriting\", background: 'white', fontWeight: 'bold', marginBottom: 10 }}\r\n                        disabled\r\n                    /><br />\r\n                    <span style={{ fontSize: 22, fontFamily: \"Lucida Console\" }}>Is Repair Needed?&nbsp;</span>\r\n                    <input\r\n                        value={repair}\r\n                        style={{ border: \"0\", fontSize: 22, fontFamily: \"Lucida Console\", background: 'white', fontWeight: 'bold', marginBottom: 10 }}\r\n                        disabled\r\n                    /><br />\r\n                    <span style={{ fontSize: 22, fontFamily: \"Lucida Console\" }}>Minimum Rent Period&nbsp;</span>\r\n                    <input\r\n                        value={rentPeriod}\r\n                        style={{ border: \"0\", fontSize: 22, fontFamily: \"Lucida Console\", background: 'white', fontWeight: 'bold', marginBottom: 10 }}\r\n                        disabled\r\n\r\n                    /><br />\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <span style={{ fontsize: 22, fontFamily: \"Lucida Console\" }}>DO you want to procedure?</span> <br /><br />\r\n                    <Button onClick={toggleModalReturnValueFinal} style={{ fontSize: 18, fontFamily: \"Lucida Console\", width: 120, height: 41,  background: '#2621a0', color: 'white' }}>Confirm</Button><br />\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {/* Return Product Confirmation */}\r\n\r\n            {/* End of Returing Product Process */}\r\n\r\n        </div>\r\n    );\r\n}\r\n","import './App.css';\nimport Product from './components/Products'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Product />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}